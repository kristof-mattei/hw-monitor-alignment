[package]
name = "hw-monitor-alignment"
# don't change this, it's updated before an actual build by update-version.sh
version = "0.0.0-development"
edition = "2024"
rust-version = "1.86.0"
authors = ["Kristof Mattei"]
description = "Rust seed application"
license-file = "LICENSE"
categories = ["starter", "seed"]
keywords = ["integrity", "seed", "starter", "docker", "release"]
repository = "https://github.com/kristof-mattei/hw-monitor-alignment"

[lints.clippy]
# don't stop from compiling / running
all = "warn"
cargo = "warn"
complexity = "warn"
correctness = "warn"
pedantic = "warn"
perf = "warn"
# restriction = "warn"
style = "warn"
suspicious = "warn"

# this one is debatable. continue is used in places to be explicit, and to guard against
# issues when refactoring
needless_continue = { level = "allow", priority = 127 }
# this one causes confusion when combining variables (`foo`) and
# dereferenced variables (`foo.bar`). The latter cannot be inlined
# so we don't inline anything
uninlined-format-args = { level = "allow", priority = 127 }

[lints.rust]
let_underscore_drop = { level = "deny", priority = 127 }
non_ascii_idents = { level = "deny", priority = 127 }

[dependencies]
color-eyre = "0.6.4"
cxx = "1.0.158"
cxx-qt = "0.7.2"
cxx-qt-lib = { version = "0.7.2", features = ["qt_full"] }

[build-dependencies]
cxx-qt-build = { version = "0.7.2", features = ["link_qt_object_files"] }

# We compile the Docker container with musl to get a static library. Smaller, faster.
# BUT that means that we need to include openssl
# Documentation on the syntax:
# https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html#platform-specific-dependencies
# OpenSSL for musl
# [target.'cfg(all(any(target_arch="x86_64", target_arch="aarch64"), target_os="linux", target_env="musl"))'.dependencies]
# openssl = { version = "0.10.36", features = ["vendored"] }
